import { AssemblyData } from './components/types';

const colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#00FFFF'];

export const DiagramTestData = {
  serializationSettings: { preventDefaults: true },
  snapSettings: { constraints: 3 },
  scrollSettings: { viewPortWidth: 591.984375, viewPortHeight: 1900 },
  layers: [
    {
      id: 'default_layer',
      visible: true,
      lock: false,
      objects: ['tJf0E', 'tJf0EUh3NO', 'tJf0EUh3NOG5NG7'],
      zIndex: 0,
      objectZIndex: 2,
    },
  ],
  nodes: [
    {
      shape: { type: 'Basic' },
      id: 'tJf0E',
      data: {
        id: 'ICU_PATIENT_ROOM',
        title: 'ICU PATIENT ROOM',
        height: 100,
        nodeType: 'assembly',
        width: 100,
        offsetX: 100,
        offsetY: 100,
        textColor: 'black',
        fillColor: 'blue',
        strokeWidth: 2,
        strokeColor: 'black',
        borderColor: 'green',
        borderWidth: 10,
      },
      height: 100,
      nodeType: 'assembly',
      width: 100,
      offsetX: 208,
      offsetY: 150,
      borderColor: 'blue',
      annotations: [{ id: 'fe74v', content: 'ICU PATIENT ROOM 1' }],
      style: { fill: 'blue', strokeWidth: 3, opacity: 0.5 },
      zIndex: 0,
    },
    {
      shape: { type: 'Basic' },
      id: 'tJf0EUh3NO',
      data: {
        id: 'ICU_PATIENT_ROOM',
        title: 'ICU PATIENT ROOM',
        height: 100,
        nodeType: 'assembly',
        width: 100,
        offsetX: 100,
        offsetY: 100,
        textColor: 'black',
        fillColor: 'blue',
        strokeWidth: 2,
        strokeColor: 'black',
        borderColor: 'green',
        borderWidth: 10,
      },
      height: 100,
      nodeType: 'assembly',
      width: 100,
      offsetX: 350,
      offsetY: 150,
      borderColor: 'blue',
      annotations: [{ id: 'fe74v', content: 'ICU PATIENT ROOM 2' }],
      style: { fill: 'blue', strokeWidth: 3, opacity: 0.5 },
      zIndex: 1,
    },
    {
      shape: { type: 'Basic' },
      id: 'tJf0EUh3NOG5NG7',
      data: {
        id: 'ICU_PATIENT_ROOM',
        title: 'ICU PATIENT ROOM',
        height: 100,
        nodeType: 'assembly',
        width: 100,
        offsetX: 100,
        offsetY: 100,
        textColor: 'black',
        fillColor: 'blue',
        strokeWidth: 2,
        strokeColor: 'black',
        borderColor: 'green',
        borderWidth: 10,
      },
      height: 100,
      nodeType: 'assembly',
      width: 100,
      offsetX: 493,
      offsetY: 149,
      borderColor: 'blue',
      annotations: [{ id: 'fe74v', content: 'ICU PATIENT ROOM 3' }],
      style: { fill: 'blue', strokeWidth: 3, opacity: 0.5 },
      zIndex: 2,
    },
  ],
  selectedItems: { width: 0, height: 0 },
};

const assembliesV2: AssemblyData[] = [
  {
    id: '1',
    title: 'Project Construction Site Objects',
    hasChild: true,
    nodeType: 'folder',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '11',
    parentId: '1',
    title: 'Construction Area',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '12',
    parentId: '1',
    title: 'Hazard Waste Disposal Area',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '13',
    parentId: '1',
    title: 'Parking Area',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '211',
    parentId: '21',
    title: 'Building Footprint',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '2',
    title: 'Building Zone Objects',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '21',
    parentId: '2',
    title: 'Building Structure',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '22',
    parentId: '2',
    title: 'Floor',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '221',
    parentId: '22',
    title: 'Floor 1',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '222',
    parentId: '22',
    title: 'Floor 2',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
  },
  {
    id: '223',
    parentId: '22',
    title: 'Floor 3',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '23',
    parentId: '2',
    title: 'Roof',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '231',
    parentId: '23',
    title: 'Roof Area',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '24',
    parentId: '2',
    title: 'Elevators',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '241',
    parentId: '24',
    title: 'Elevator 1 (Visitor Passenger)',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '242',
    parentId: '24',
    title: 'Elevator 2 (Patient)',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '243',
    parentId: '24',
    title: 'Elevator 3 (Cargo)',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '25',
    parentId: '2',
    title: 'Escalators',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '251',
    parentId: '25',
    title: 'Escalator 1',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '252',
    parentId: '25',
    title: 'Escalator 2',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '26',
    parentId: '2',
    title: 'Exit Areas',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '261',
    parentId: '26',
    title: 'Exit Area 1',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '262',
    parentId: '26',
    title: 'Exit Area 2',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '27',
    parentId: '2',
    title: 'Mechanical Rooms',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '271',
    parentId: '27',
    title: 'Mechanical Room 1',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '272',
    parentId: '27',
    title: 'Mechanical Room 2',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
  {
    id: '3',
    title: 'Hospital Departments',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '31',
    parentId: '3',
    title: 'ICU Department',
    nodeType: 'folder',
    hasChild: true,
  },
  {
    id: '311',
    parentId: '31',
    title: 'ICU Patient Room Object',
    nodeType: 'assembly',
    width: 100,
    height: 100,
    minWidth: 50,
    maxWidth: 200,
    minHeight: 100,
    maxHeight: 200,
    hasChild: false,
    fillColor: 'lightblue',
    borderColor: 'black',
    borderWidth: 2,
    borderStyle: 'solid',
  },
];

export const getAllAssemblies = (): AssemblyData[] => {
  return assembliesV2;
};

export const getAssemblyData = (assemblyTreeNodeId: string): AssemblyData => {
  const randomColor = colors[Math.floor(Math.random() * colors.length)];
  const assemblyData = assembliesV2.find(
    (assembly) => assembly.id === assemblyTreeNodeId
  );
  assemblyData.fillColor = randomColor;
  return assemblyData;
};
